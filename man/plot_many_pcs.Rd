% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_many_pcs.R
\name{plot_many_pcs}
\alias{plot_many_pcs}
\title{Plot many pcs simulation results}
\usage{
plot_many_pcs(
  results,
  outcome,
  y_axis_range,
  parameter,
  variables,
  n_latent,
  na_mechanism,
  prop_na,
  method_vector,
  npc_range
)
}
\arguments{
\item{results}{object containing results produced by the simulation study}

\item{outcome}{performance measure to plot}

\item{y_axis_range}{range of the outcome measure on the y-axis}

\item{parameter}{estimated parameter of interest}

\item{variables}{which variables should be plotted}

\item{n_latent}{number of latent variables used in the data generating model}

\item{na_mechanism}{missing data mechanism used to generate the data}

\item{prop_na}{proportino of missing data generated per-variable}

\item{method_vector}{experimental factor value: imputation methods considered}

\item{npc_range}{experimental factor value: number of components considered}
}
\value{
Returns the ggplot
}
\description{
Generate a plot to compare the performance trends for wide ranges of npcs.
}
\examples{
# Define example inputs
results <- dataResults
outcome <- "PRB"
n_latent <- unique(dataResults$nla)[3]
na_mechanism <- levels(dataResults$mech)[1]
prop_na <- sort(unique(dataResults$pm))[3]
variables <- unique(dataResults$vars)[1]
parameter <- unique(dataResults$stat)[1]
method_vector <- levels(dataResults$method)[1:4]
npc_range <- c(0, 12)
y_axis_range <- c(0, 60)

# Use the function
plot_many_pcs(
    results = dataResults,
    outcome = "PRB",
    n_latent = dataResults$nla[2],
    na_mechanism = levels(dataResults$mech),
    prop_na = sort(unique(dataResults$pm)),
    variables = unique(dataResults$vars)[1],
    parameter = unique(dataResults$stat)[1],
    method_vector = levels(dataResults$method)[1:4],
    npc_range = c(0, 149),
    y_axis_range = c(0, 60)
)

}
\author{
Edoardo Costantini, 2023
}
